<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>